version: 2
jobs:
  build_and_test:
    working_directory: ~/app
    docker:
      - image: circleci/ruby:2.4.3
        environment:
          - RAILS_ENV: test
          - DATABASE_HOST: 127.0.0.1
          - DATABASE_USER: postgres
          - DATABASE_PASSWORD: postgres
      - image: circleci/postgres:9.6.2-alpine
        environment:
          - POSTGRES_USER: postgres
          - POSTGRES_PASSWORD: postgres
          - POSTGRES_DB: watg_test
    steps:
      - checkout

      # Restore bundle cache
      - type: cache-restore
        key: bundle-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - type: cache-save
        key: bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

  deploy_staging:
    docker:
    - image: lukemorton/web-deployer-tools:latest
    steps:
    - checkout
    - run: echo ${GOOGLE_AUTH} > gcp-key.json
    - run: gcloud auth activate-service-account --key-file gcp-key.json
    - setup_remote_docker
    - run: gcloud auth configure-docker
    - run: web-deployer publish staging --verbose $(git describe --tags)
    - run: web-deployer deploy staging --verbose $(git describe --tags)

  deploy_production:
    docker:
    - image: lukemorton/web-deployer-tools:latest
    steps:
    - checkout
    - run: echo ${GOOGLE_AUTH} > gcp-key.json
    - run: gcloud auth activate-service-account --key-file gcp-key.json
    - run: make deploy VERSION=$(git describe --tags) APP_ENV=production

workflows:
  version: 2
  cd:
    jobs:
      - build_and_test
      - deploy_staging:
          requires:
            - build_and_test
          filters:
            tags:
              only: /^v.*/
      - review:
          type: approval
          requires:
           - deploy_staging
      - deploy_production:
          requires:
            - review
